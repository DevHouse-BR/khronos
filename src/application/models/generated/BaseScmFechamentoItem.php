<?php

/**
 * BaseScmFechamentoItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_fechamento_doc
 * @property integer $id_maquina
 * @property decimal $vl_credito
 * @property integer $id_moeda
 * @property integer $id_jogo
 * @property integer $nr_cont_1
 * @property integer $nr_cont_2
 * @property integer $nr_cont_3
 * @property integer $nr_cont_4
 * @property integer $nr_cont_5
 * @property integer $nr_cont_6
 * @property integer $nr_cont_1_ant
 * @property integer $nr_cont_2_ant
 * @property integer $nr_cont_3_ant
 * @property integer $nr_cont_4_ant
 * @property integer $nr_cont_5_ant
 * @property integer $nr_cont_6_ant
 * @property integer $nr_dif_cont_1
 * @property integer $nr_dif_cont_2
 * @property integer $nr_dif_cont_3
 * @property integer $nr_dif_cont_4
 * @property integer $nr_dif_cont_5
 * @property integer $nr_dif_cont_6
 * @property decimal $vl_dif_cont_1
 * @property decimal $vl_dif_cont_2
 * @property decimal $vl_dif_cont_3
 * @property decimal $vl_dif_cont_4
 * @property decimal $vl_dif_cont_5
 * @property decimal $vl_dif_cont_6
 * @property ScmFechamentoDoc $ScmFechamentoDoc
 * @property ScmMoeda $ScmMoeda
 * @property ScmMaquina $ScmMaquina
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
abstract class BaseScmFechamentoItem extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('scm_fechamento_item');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('id_fechamento_doc', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('id_maquina', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('vl_credito', 'decimal', 10, array(
             'type' => 'decimal',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'scale' => false,
             'length' => '10',
             ));
        $this->hasColumn('id_moeda', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('id_jogo', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_1', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_2', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_3', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_4', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_5', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_6', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_1_ant', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_2_ant', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_3_ant', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_4_ant', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_5_ant', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_cont_6_ant', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_dif_cont_1', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_dif_cont_2', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_dif_cont_3', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_dif_cont_4', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_dif_cont_5', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nr_dif_cont_6', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('vl_dif_cont_1', 'decimal', 10, array(
             'type' => 'decimal',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'scale' => false,
             'length' => '10',
             ));
        $this->hasColumn('vl_dif_cont_2', 'decimal', 10, array(
             'type' => 'decimal',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'scale' => false,
             'length' => '10',
             ));
        $this->hasColumn('vl_dif_cont_3', 'decimal', 10, array(
             'type' => 'decimal',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'scale' => false,
             'length' => '10',
             ));
        $this->hasColumn('vl_dif_cont_4', 'decimal', 10, array(
             'type' => 'decimal',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'scale' => false,
             'length' => '10',
             ));
        $this->hasColumn('vl_dif_cont_5', 'decimal', 10, array(
             'type' => 'decimal',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'scale' => false,
             'length' => '10',
             ));
        $this->hasColumn('vl_dif_cont_6', 'decimal', 10, array(
             'type' => 'decimal',
             'unsigned' => 0,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'scale' => false,
             'length' => '10',
             ));
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('ScmFechamentoDoc', array(
             'local' => 'id_fechamento_doc',
             'foreign' => 'id'));

        $this->hasOne('ScmMoeda', array(
             'local' => 'id_moeda',
             'foreign' => 'id'));

        $this->hasOne('ScmMaquina', array(
             'local' => 'id_maquina',
             'foreign' => 'id'));
    }
}